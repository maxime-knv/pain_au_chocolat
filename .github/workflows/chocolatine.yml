name: choco

on:
  push:
    branches-ignore:
        - "ga-ignore-*"
  pull_request:
    branches-ignore:
        - "ga-ignore-*"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    name: check_coding_style
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
          id: check_coding_style
        - run: |
              check.sh $(pwd) $(pwd)
              cdsfile="coding-style-reports.log"
              IFS=":"
              while read -r file_name lines error_type error ; do
                echo "::error file=$file_name,line=$lines::$error_type"
              done < "$cdsfile"
        - run: |
            if [ -s "$cdsfile" ]
              then
                exit 1
            fi

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    env:
      EXECUTABLE: chocolatine
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: make
      - run: make clean
      - run: |
          if [ ! -f ${{ env.EXECUTABLE }} ]; 
          then
            echo "File is not exist"
            exit 1
          fi
          if [ ! -x ${{ env.EXECUTABLE }} ];
            then
              echo "executable is not exist"
              exit 1
          fi

  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          id: run_tests
          run: make run_tests

  push_to_mirror:
    needs: run_tests
    runs-on: ubuntu-latest
    env:
      MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-PAR-2-1-chocolatine-maxime.kournikov.git
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}

